// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: junimohost/servermanager/v1/servermanager.proto

package servermanagerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerSize int32

const (
	ServerSize_UNKNOWN_SIZE ServerSize = 0
	ServerSize_STANDARD     ServerSize = 1
	ServerSize_PRO          ServerSize = 2
	ServerSize_MODDED       ServerSize = 3
	ServerSize_MODDED_PRO   ServerSize = 4
)

// Enum value maps for ServerSize.
var (
	ServerSize_name = map[int32]string{
		0: "UNKNOWN_SIZE",
		1: "STANDARD",
		2: "PRO",
		3: "MODDED",
		4: "MODDED_PRO",
	}
	ServerSize_value = map[string]int32{
		"UNKNOWN_SIZE": 0,
		"STANDARD":     1,
		"PRO":          2,
		"MODDED":       3,
		"MODDED_PRO":   4,
	}
)

func (x ServerSize) Enum() *ServerSize {
	p := new(ServerSize)
	*p = x
	return p
}

func (x ServerSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerSize) Descriptor() protoreflect.EnumDescriptor {
	return file_junimohost_servermanager_v1_servermanager_proto_enumTypes[0].Descriptor()
}

func (ServerSize) Type() protoreflect.EnumType {
	return &file_junimohost_servermanager_v1_servermanager_proto_enumTypes[0]
}

func (x ServerSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerSize.Descriptor instead.
func (ServerSize) EnumDescriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{0}
}

type DisplayMod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionId   string `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Semver      string `protobuf:"bytes,3,opt,name=semver,proto3" json:"semver,omitempty"`
	DownloadUrl string `protobuf:"bytes,4,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	Homepage    string `protobuf:"bytes,5,opt,name=homepage,proto3" json:"homepage,omitempty"`
	IsLibrary   bool   `protobuf:"varint,6,opt,name=is_library,json=isLibrary,proto3" json:"is_library,omitempty"`
}

func (x *DisplayMod) Reset() {
	*x = DisplayMod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayMod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayMod) ProtoMessage() {}

func (x *DisplayMod) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayMod.ProtoReflect.Descriptor instead.
func (*DisplayMod) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{0}
}

func (x *DisplayMod) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *DisplayMod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DisplayMod) GetSemver() string {
	if x != nil {
		return x.Semver
	}
	return ""
}

func (x *DisplayMod) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *DisplayMod) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *DisplayMod) GetIsLibrary() bool {
	if x != nil {
		return x.IsLibrary
	}
	return false
}

type GetSharePageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *GetSharePageRequest) Reset() {
	*x = GetSharePageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharePageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharePageRequest) ProtoMessage() {}

func (x *GetSharePageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharePageRequest.ProtoReflect.Descriptor instead.
func (*GetSharePageRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{1}
}

func (x *GetSharePageRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type GetSharePageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostUri    string        `protobuf:"bytes,1,opt,name=host_uri,json=hostUri,proto3" json:"host_uri,omitempty"`
	ServerName string        `protobuf:"bytes,2,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Mods       []*DisplayMod `protobuf:"bytes,3,rep,name=mods,proto3" json:"mods,omitempty"`
}

func (x *GetSharePageResponse) Reset() {
	*x = GetSharePageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharePageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharePageResponse) ProtoMessage() {}

func (x *GetSharePageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharePageResponse.ProtoReflect.Descriptor instead.
func (*GetSharePageResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{2}
}

func (x *GetSharePageResponse) GetHostUri() string {
	if x != nil {
		return x.HostUri
	}
	return ""
}

func (x *GetSharePageResponse) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *GetSharePageResponse) GetMods() []*DisplayMod {
	if x != nil {
		return x.Mods
	}
	return nil
}

type GetServerModsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *GetServerModsRequest) Reset() {
	*x = GetServerModsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerModsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerModsRequest) ProtoMessage() {}

func (x *GetServerModsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerModsRequest.ProtoReflect.Descriptor instead.
func (*GetServerModsRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{3}
}

func (x *GetServerModsRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type GetServerModsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mods []*DisplayMod `protobuf:"bytes,1,rep,name=mods,proto3" json:"mods,omitempty"`
}

func (x *GetServerModsResponse) Reset() {
	*x = GetServerModsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerModsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerModsResponse) ProtoMessage() {}

func (x *GetServerModsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerModsResponse.ProtoReflect.Descriptor instead.
func (*GetServerModsResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{4}
}

func (x *GetServerModsResponse) GetMods() []*DisplayMod {
	if x != nil {
		return x.Mods
	}
	return nil
}

type GetBackupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *GetBackupsRequest) Reset() {
	*x = GetBackupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackupsRequest) ProtoMessage() {}

func (x *GetBackupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackupsRequest.ProtoReflect.Descriptor instead.
func (*GetBackupsRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{5}
}

func (x *GetBackupsRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type Backup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Backup) Reset() {
	*x = Backup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backup) ProtoMessage() {}

func (x *Backup) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backup.ProtoReflect.Descriptor instead.
func (*Backup) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{6}
}

func (x *Backup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Backup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Backup) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type GetBackupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backup []*Backup `protobuf:"bytes,1,rep,name=backup,proto3" json:"backup,omitempty"`
}

func (x *GetBackupsResponse) Reset() {
	*x = GetBackupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackupsResponse) ProtoMessage() {}

func (x *GetBackupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackupsResponse.ProtoReflect.Descriptor instead.
func (*GetBackupsResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{7}
}

func (x *GetBackupsResponse) GetBackup() []*Backup {
	if x != nil {
		return x.Backup
	}
	return nil
}

type RestoreBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	BackupId string `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
}

func (x *RestoreBackupRequest) Reset() {
	*x = RestoreBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreBackupRequest) ProtoMessage() {}

func (x *RestoreBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreBackupRequest.ProtoReflect.Descriptor instead.
func (*RestoreBackupRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{8}
}

func (x *RestoreBackupRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *RestoreBackupRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

type RestoreBackupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestoreBackupResponse) Reset() {
	*x = RestoreBackupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreBackupResponse) ProtoMessage() {}

func (x *RestoreBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreBackupResponse.ProtoReflect.Descriptor instead.
func (*RestoreBackupResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{9}
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId           string     `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	InstanceSize       ServerSize `protobuf:"varint,2,opt,name=instance_size,json=instanceSize,proto3,enum=junimohost.servermanager.v1.ServerSize" json:"instance_size,omitempty"`
	HostUri            string     `protobuf:"bytes,3,opt,name=host_uri,json=hostUri,proto3" json:"host_uri,omitempty"`
	ServerName         string     `protobuf:"bytes,4,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Status             string     `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	SubscriptionStatus string     `protobuf:"bytes,6,opt,name=subscription_status,json=subscriptionStatus,proto3" json:"subscription_status,omitempty"`
	TrialEndTimestamp  int64      `protobuf:"varint,7,opt,name=trial_end_timestamp,json=trialEndTimestamp,proto3" json:"trial_end_timestamp,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{10}
}

func (x *Server) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *Server) GetInstanceSize() ServerSize {
	if x != nil {
		return x.InstanceSize
	}
	return ServerSize_UNKNOWN_SIZE
}

func (x *Server) GetHostUri() string {
	if x != nil {
		return x.HostUri
	}
	return ""
}

func (x *Server) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *Server) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Server) GetSubscriptionStatus() string {
	if x != nil {
		return x.SubscriptionStatus
	}
	return ""
}

func (x *Server) GetTrialEndTimestamp() int64 {
	if x != nil {
		return x.TrialEndTimestamp
	}
	return 0
}

type UpdateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId     string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	InstanceSize ServerSize             `protobuf:"varint,2,opt,name=instance_size,json=instanceSize,proto3,enum=junimohost.servermanager.v1.ServerSize" json:"instance_size,omitempty"`
	UpdateMask   *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateServerRequest) Reset() {
	*x = UpdateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerRequest) ProtoMessage() {}

func (x *UpdateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerRequest) GetInstanceSize() ServerSize {
	if x != nil {
		return x.InstanceSize
	}
	return ServerSize_UNKNOWN_SIZE
}

func (x *UpdateServerRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *UpdateServerResponse) Reset() {
	*x = UpdateServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerResponse) ProtoMessage() {}

func (x *UpdateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerResponse.ProtoReflect.Descriptor instead.
func (*UpdateServerResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateServerResponse) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

type CreateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceSize ServerSize `protobuf:"varint,1,opt,name=instance_size,json=instanceSize,proto3,enum=junimohost.servermanager.v1.ServerSize" json:"instance_size,omitempty"`
	ServerName   string     `protobuf:"bytes,2,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
}

func (x *CreateServerRequest) Reset() {
	*x = CreateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerRequest) ProtoMessage() {}

func (x *CreateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerRequest.ProtoReflect.Descriptor instead.
func (*CreateServerRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{13}
}

func (x *CreateServerRequest) GetInstanceSize() ServerSize {
	if x != nil {
		return x.InstanceSize
	}
	return ServerSize_UNKNOWN_SIZE
}

func (x *CreateServerRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type CreateServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *CreateServerResponse) Reset() {
	*x = CreateServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerResponse) ProtoMessage() {}

func (x *CreateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerResponse.ProtoReflect.Descriptor instead.
func (*CreateServerResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{14}
}

func (x *CreateServerResponse) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

type DeleteServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *DeleteServerRequest) Reset() {
	*x = DeleteServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerRequest) ProtoMessage() {}

func (x *DeleteServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerRequest.ProtoReflect.Descriptor instead.
func (*DeleteServerRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type GetServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetServersRequest) Reset() {
	*x = GetServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersRequest) ProtoMessage() {}

func (x *GetServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersRequest.ProtoReflect.Descriptor instead.
func (*GetServersRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{16}
}

type GetServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers []*Server `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *GetServersResponse) Reset() {
	*x = GetServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersResponse) ProtoMessage() {}

func (x *GetServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersResponse.ProtoReflect.Descriptor instead.
func (*GetServersResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{17}
}

func (x *GetServersResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

type CreateGameConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config   *GameConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	ServerId string      `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *CreateGameConfigRequest) Reset() {
	*x = CreateGameConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameConfigRequest) ProtoMessage() {}

func (x *CreateGameConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateGameConfigRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{18}
}

func (x *CreateGameConfigRequest) GetConfig() *GameConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateGameConfigRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type CreateGameConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *GameConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *CreateGameConfigResponse) Reset() {
	*x = CreateGameConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameConfigResponse) ProtoMessage() {}

func (x *CreateGameConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameConfigResponse.ProtoReflect.Descriptor instead.
func (*CreateGameConfigResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{19}
}

func (x *CreateGameConfigResponse) GetConfig() *GameConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GameConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhichFarm          int64    `protobuf:"varint,1,opt,name=whichFarm,proto3" json:"whichFarm,omitempty"`
	UseSeparateWallets bool     `protobuf:"varint,2,opt,name=useSeparateWallets,proto3" json:"useSeparateWallets,omitempty"`
	StartingCabins     int64    `protobuf:"varint,3,opt,name=startingCabins,proto3" json:"startingCabins,omitempty"`
	CatPerson          bool     `protobuf:"varint,4,opt,name=catPerson,proto3" json:"catPerson,omitempty"`
	FarmName           string   `protobuf:"bytes,5,opt,name=farmName,proto3" json:"farmName,omitempty"`
	ModVersionIds      []string `protobuf:"bytes,6,rep,name=mod_version_ids,json=modVersionIds,proto3" json:"mod_version_ids,omitempty"`
	ModIds             []string `protobuf:"bytes,7,rep,name=mod_ids,json=modIds,proto3" json:"mod_ids,omitempty"`
	MaxPlayers         int64    `protobuf:"varint,8,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	CabinStrategy      int64    `protobuf:"varint,9,opt,name=cabin_strategy,json=cabinStrategy,proto3" json:"cabin_strategy,omitempty"` // 0 is cabin stack, 1 is farmhouse stack
}

func (x *GameConfig) Reset() {
	*x = GameConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfig) ProtoMessage() {}

func (x *GameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfig.ProtoReflect.Descriptor instead.
func (*GameConfig) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{20}
}

func (x *GameConfig) GetWhichFarm() int64 {
	if x != nil {
		return x.WhichFarm
	}
	return 0
}

func (x *GameConfig) GetUseSeparateWallets() bool {
	if x != nil {
		return x.UseSeparateWallets
	}
	return false
}

func (x *GameConfig) GetStartingCabins() int64 {
	if x != nil {
		return x.StartingCabins
	}
	return 0
}

func (x *GameConfig) GetCatPerson() bool {
	if x != nil {
		return x.CatPerson
	}
	return false
}

func (x *GameConfig) GetFarmName() string {
	if x != nil {
		return x.FarmName
	}
	return ""
}

func (x *GameConfig) GetModVersionIds() []string {
	if x != nil {
		return x.ModVersionIds
	}
	return nil
}

func (x *GameConfig) GetModIds() []string {
	if x != nil {
		return x.ModIds
	}
	return nil
}

func (x *GameConfig) GetMaxPlayers() int64 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *GameConfig) GetCabinStrategy() int64 {
	if x != nil {
		return x.CabinStrategy
	}
	return 0
}

type StopServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *StopServerRequest) Reset() {
	*x = StopServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerRequest) ProtoMessage() {}

func (x *StopServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerRequest.ProtoReflect.Descriptor instead.
func (*StopServerRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{21}
}

func (x *StopServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type StopServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopServerResponse) Reset() {
	*x = StopServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerResponse) ProtoMessage() {}

func (x *StopServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerResponse.ProtoReflect.Descriptor instead.
func (*StopServerResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{22}
}

type StartServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *StartServerRequest) Reset() {
	*x = StartServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerRequest) ProtoMessage() {}

func (x *StartServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServerRequest.ProtoReflect.Descriptor instead.
func (*StartServerRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{23}
}

func (x *StartServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type StartServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartServerResponse) Reset() {
	*x = StartServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerResponse) ProtoMessage() {}

func (x *StartServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServerResponse.ProtoReflect.Descriptor instead.
func (*StartServerResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{24}
}

type RestartServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *RestartServerRequest) Reset() {
	*x = RestartServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServerRequest) ProtoMessage() {}

func (x *RestartServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServerRequest.ProtoReflect.Descriptor instead.
func (*RestartServerRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{25}
}

func (x *RestartServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type RestartServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestartServerResponse) Reset() {
	*x = RestartServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServerResponse) ProtoMessage() {}

func (x *RestartServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServerResponse.ProtoReflect.Descriptor instead.
func (*RestartServerResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{26}
}

type GetAvailableModsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAvailableModsRequest) Reset() {
	*x = GetAvailableModsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableModsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableModsRequest) ProtoMessage() {}

func (x *GetAvailableModsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableModsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableModsRequest) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{27}
}

type GetAvailableModsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mods []*Mod `protobuf:"bytes,1,rep,name=mods,proto3" json:"mods,omitempty"`
}

func (x *GetAvailableModsResponse) Reset() {
	*x = GetAvailableModsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableModsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableModsResponse) ProtoMessage() {}

func (x *GetAvailableModsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableModsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableModsResponse) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{28}
}

func (x *GetAvailableModsResponse) GetMods() []*Mod {
	if x != nil {
		return x.Mods
	}
	return nil
}

type Mod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModId             string        `protobuf:"bytes,1,opt,name=mod_id,json=modId,proto3" json:"mod_id,omitempty"`
	ModName           string        `protobuf:"bytes,2,opt,name=mod_name,json=modName,proto3" json:"mod_name,omitempty"`
	AuthorName        string        `protobuf:"bytes,3,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	ModHomepageUrl    string        `protobuf:"bytes,4,opt,name=mod_homepage_url,json=modHomepageUrl,proto3" json:"mod_homepage_url,omitempty"`
	RequiresFreshSave bool          `protobuf:"varint,5,opt,name=requires_fresh_save,json=requiresFreshSave,proto3" json:"requires_fresh_save,omitempty"`
	IsLibrary         bool          `protobuf:"varint,6,opt,name=is_library,json=isLibrary,proto3" json:"is_library,omitempty"`
	Versions          []*ModVersion `protobuf:"bytes,7,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *Mod) Reset() {
	*x = Mod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mod) ProtoMessage() {}

func (x *Mod) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mod.ProtoReflect.Descriptor instead.
func (*Mod) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{29}
}

func (x *Mod) GetModId() string {
	if x != nil {
		return x.ModId
	}
	return ""
}

func (x *Mod) GetModName() string {
	if x != nil {
		return x.ModName
	}
	return ""
}

func (x *Mod) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *Mod) GetModHomepageUrl() string {
	if x != nil {
		return x.ModHomepageUrl
	}
	return ""
}

func (x *Mod) GetRequiresFreshSave() bool {
	if x != nil {
		return x.RequiresFreshSave
	}
	return false
}

func (x *Mod) GetIsLibrary() bool {
	if x != nil {
		return x.IsLibrary
	}
	return false
}

func (x *Mod) GetVersions() []*ModVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ModVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModVersionId         string   `protobuf:"bytes,1,opt,name=mod_version_id,json=modVersionId,proto3" json:"mod_version_id,omitempty"`
	ModId                string   `protobuf:"bytes,2,opt,name=mod_id,json=modId,proto3" json:"mod_id,omitempty"`
	GcsPath              string   `protobuf:"bytes,3,opt,name=gcs_path,json=gcsPath,proto3" json:"gcs_path,omitempty"`
	ModSemver            string   `protobuf:"bytes,4,opt,name=mod_semver,json=modSemver,proto3" json:"mod_semver,omitempty"`
	ModInstallUrl        string   `protobuf:"bytes,5,opt,name=mod_install_url,json=modInstallUrl,proto3" json:"mod_install_url,omitempty"`
	DependencyVersionIds []string `protobuf:"bytes,6,rep,name=dependency_version_ids,json=dependencyVersionIds,proto3" json:"dependency_version_ids,omitempty"`
}

func (x *ModVersion) Reset() {
	*x = ModVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModVersion) ProtoMessage() {}

func (x *ModVersion) ProtoReflect() protoreflect.Message {
	mi := &file_junimohost_servermanager_v1_servermanager_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModVersion.ProtoReflect.Descriptor instead.
func (*ModVersion) Descriptor() ([]byte, []int) {
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP(), []int{30}
}

func (x *ModVersion) GetModVersionId() string {
	if x != nil {
		return x.ModVersionId
	}
	return ""
}

func (x *ModVersion) GetModId() string {
	if x != nil {
		return x.ModId
	}
	return ""
}

func (x *ModVersion) GetGcsPath() string {
	if x != nil {
		return x.GcsPath
	}
	return ""
}

func (x *ModVersion) GetModSemver() string {
	if x != nil {
		return x.ModSemver
	}
	return ""
}

func (x *ModVersion) GetModInstallUrl() string {
	if x != nil {
		return x.ModInstallUrl
	}
	return ""
}

func (x *ModVersion) GetDependencyVersionIds() []string {
	if x != nil {
		return x.DependencyVersionIds
	}
	return nil
}

var File_junimohost_servermanager_v1_servermanager_proto protoreflect.FileDescriptor

var file_junimohost_servermanager_v1_servermanager_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1b, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x01,
	0x0a, 0x0a, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x22, 0x32, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x72, 0x69, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6a,
	0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4d, 0x6f, 0x64, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x54, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6a, 0x75,
	0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x52, 0x06, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x50, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xa8, 0x02, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x73,
	0x74, 0x55, 0x72, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a,
	0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x72, 0x69,
	0x61, 0x6c, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xbd,
	0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6a, 0x75, 0x6e,
	0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x53,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22,
	0x32, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x77, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d,
	0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0xc5, 0x02, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x63, 0x68, 0x46, 0x61, 0x72, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x68, 0x69, 0x63, 0x68, 0x46, 0x61, 0x72, 0x6d,
	0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73,
	0x65, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x72, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x72, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x6f,
	0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64,
	0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x5f, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x30, 0x0a, 0x11, 0x53,
	0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a,
	0x14, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x73, 0x22, 0x96, 0x02, 0x0a, 0x03, 0x4d, 0x6f, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d,
	0x6f, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a,
	0x13, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x73, 0x61, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x73, 0x46, 0x72, 0x65, 0x73, 0x68, 0x53, 0x61, 0x76, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x43, 0x0a, 0x08,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xe1, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x63, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x63, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x5f,
	0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x53, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x12,
	0x34, 0x0a, 0x16, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x14, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x2a, 0x51, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53,
	0x49, 0x5a, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52,
	0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x52, 0x4f, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x4f, 0x44, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x44, 0x44,
	0x45, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x10, 0x04, 0x32, 0xa9, 0x0a, 0x0a, 0x14, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x6d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x2e, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x73, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x30, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x2e, 0x6a, 0x75, 0x6e, 0x69,
	0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x73, 0x12, 0x2e, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x31, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6a, 0x75, 0x6e, 0x69,
	0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a,
	0x0a, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x6a, 0x75,
	0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6a, 0x75,
	0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x6a, 0x75,
	0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6a,
	0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76,
	0x0a, 0x0d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x31, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x73, 0x12, 0x34, 0x2e, 0x6a, 0x75, 0x6e,
	0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x73, 0x12, 0x31, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d,
	0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6a, 0x75,
	0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x73, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x30, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x6a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x9f, 0x02, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x75, 0x6e,
	0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x75, 0x6e, 0x69, 0x6d,
	0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x6a,
	0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4a, 0x53, 0x58,
	0xaa, 0x02, 0x1b, 0x4a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x1b, 0x4a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x5c, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x27, 0x4a,
	0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68, 0x6f, 0x73, 0x74, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1d, 0x4a, 0x75, 0x6e, 0x69, 0x6d, 0x6f, 0x68,
	0x6f, 0x73, 0x74, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_junimohost_servermanager_v1_servermanager_proto_rawDescOnce sync.Once
	file_junimohost_servermanager_v1_servermanager_proto_rawDescData = file_junimohost_servermanager_v1_servermanager_proto_rawDesc
)

func file_junimohost_servermanager_v1_servermanager_proto_rawDescGZIP() []byte {
	file_junimohost_servermanager_v1_servermanager_proto_rawDescOnce.Do(func() {
		file_junimohost_servermanager_v1_servermanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_junimohost_servermanager_v1_servermanager_proto_rawDescData)
	})
	return file_junimohost_servermanager_v1_servermanager_proto_rawDescData
}

var file_junimohost_servermanager_v1_servermanager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_junimohost_servermanager_v1_servermanager_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_junimohost_servermanager_v1_servermanager_proto_goTypes = []interface{}{
	(ServerSize)(0),                  // 0: junimohost.servermanager.v1.ServerSize
	(*DisplayMod)(nil),               // 1: junimohost.servermanager.v1.DisplayMod
	(*GetSharePageRequest)(nil),      // 2: junimohost.servermanager.v1.GetSharePageRequest
	(*GetSharePageResponse)(nil),     // 3: junimohost.servermanager.v1.GetSharePageResponse
	(*GetServerModsRequest)(nil),     // 4: junimohost.servermanager.v1.GetServerModsRequest
	(*GetServerModsResponse)(nil),    // 5: junimohost.servermanager.v1.GetServerModsResponse
	(*GetBackupsRequest)(nil),        // 6: junimohost.servermanager.v1.GetBackupsRequest
	(*Backup)(nil),                   // 7: junimohost.servermanager.v1.Backup
	(*GetBackupsResponse)(nil),       // 8: junimohost.servermanager.v1.GetBackupsResponse
	(*RestoreBackupRequest)(nil),     // 9: junimohost.servermanager.v1.RestoreBackupRequest
	(*RestoreBackupResponse)(nil),    // 10: junimohost.servermanager.v1.RestoreBackupResponse
	(*Server)(nil),                   // 11: junimohost.servermanager.v1.Server
	(*UpdateServerRequest)(nil),      // 12: junimohost.servermanager.v1.UpdateServerRequest
	(*UpdateServerResponse)(nil),     // 13: junimohost.servermanager.v1.UpdateServerResponse
	(*CreateServerRequest)(nil),      // 14: junimohost.servermanager.v1.CreateServerRequest
	(*CreateServerResponse)(nil),     // 15: junimohost.servermanager.v1.CreateServerResponse
	(*DeleteServerRequest)(nil),      // 16: junimohost.servermanager.v1.DeleteServerRequest
	(*GetServersRequest)(nil),        // 17: junimohost.servermanager.v1.GetServersRequest
	(*GetServersResponse)(nil),       // 18: junimohost.servermanager.v1.GetServersResponse
	(*CreateGameConfigRequest)(nil),  // 19: junimohost.servermanager.v1.CreateGameConfigRequest
	(*CreateGameConfigResponse)(nil), // 20: junimohost.servermanager.v1.CreateGameConfigResponse
	(*GameConfig)(nil),               // 21: junimohost.servermanager.v1.GameConfig
	(*StopServerRequest)(nil),        // 22: junimohost.servermanager.v1.StopServerRequest
	(*StopServerResponse)(nil),       // 23: junimohost.servermanager.v1.StopServerResponse
	(*StartServerRequest)(nil),       // 24: junimohost.servermanager.v1.StartServerRequest
	(*StartServerResponse)(nil),      // 25: junimohost.servermanager.v1.StartServerResponse
	(*RestartServerRequest)(nil),     // 26: junimohost.servermanager.v1.RestartServerRequest
	(*RestartServerResponse)(nil),    // 27: junimohost.servermanager.v1.RestartServerResponse
	(*GetAvailableModsRequest)(nil),  // 28: junimohost.servermanager.v1.GetAvailableModsRequest
	(*GetAvailableModsResponse)(nil), // 29: junimohost.servermanager.v1.GetAvailableModsResponse
	(*Mod)(nil),                      // 30: junimohost.servermanager.v1.Mod
	(*ModVersion)(nil),               // 31: junimohost.servermanager.v1.ModVersion
	(*fieldmaskpb.FieldMask)(nil),    // 32: google.protobuf.FieldMask
}
var file_junimohost_servermanager_v1_servermanager_proto_depIdxs = []int32{
	1,  // 0: junimohost.servermanager.v1.GetSharePageResponse.mods:type_name -> junimohost.servermanager.v1.DisplayMod
	1,  // 1: junimohost.servermanager.v1.GetServerModsResponse.mods:type_name -> junimohost.servermanager.v1.DisplayMod
	7,  // 2: junimohost.servermanager.v1.GetBackupsResponse.backup:type_name -> junimohost.servermanager.v1.Backup
	0,  // 3: junimohost.servermanager.v1.Server.instance_size:type_name -> junimohost.servermanager.v1.ServerSize
	0,  // 4: junimohost.servermanager.v1.UpdateServerRequest.instance_size:type_name -> junimohost.servermanager.v1.ServerSize
	32, // 5: junimohost.servermanager.v1.UpdateServerRequest.update_mask:type_name -> google.protobuf.FieldMask
	11, // 6: junimohost.servermanager.v1.UpdateServerResponse.server:type_name -> junimohost.servermanager.v1.Server
	0,  // 7: junimohost.servermanager.v1.CreateServerRequest.instance_size:type_name -> junimohost.servermanager.v1.ServerSize
	11, // 8: junimohost.servermanager.v1.CreateServerResponse.server:type_name -> junimohost.servermanager.v1.Server
	11, // 9: junimohost.servermanager.v1.GetServersResponse.servers:type_name -> junimohost.servermanager.v1.Server
	21, // 10: junimohost.servermanager.v1.CreateGameConfigRequest.config:type_name -> junimohost.servermanager.v1.GameConfig
	21, // 11: junimohost.servermanager.v1.CreateGameConfigResponse.config:type_name -> junimohost.servermanager.v1.GameConfig
	30, // 12: junimohost.servermanager.v1.GetAvailableModsResponse.mods:type_name -> junimohost.servermanager.v1.Mod
	31, // 13: junimohost.servermanager.v1.Mod.versions:type_name -> junimohost.servermanager.v1.ModVersion
	17, // 14: junimohost.servermanager.v1.ServerManagerService.GetServers:input_type -> junimohost.servermanager.v1.GetServersRequest
	12, // 15: junimohost.servermanager.v1.ServerManagerService.UpdateServer:input_type -> junimohost.servermanager.v1.UpdateServerRequest
	19, // 16: junimohost.servermanager.v1.ServerManagerService.CreateGameConfig:input_type -> junimohost.servermanager.v1.CreateGameConfigRequest
	6,  // 17: junimohost.servermanager.v1.ServerManagerService.GetBackups:input_type -> junimohost.servermanager.v1.GetBackupsRequest
	9,  // 18: junimohost.servermanager.v1.ServerManagerService.RestoreBackup:input_type -> junimohost.servermanager.v1.RestoreBackupRequest
	22, // 19: junimohost.servermanager.v1.ServerManagerService.StopServer:input_type -> junimohost.servermanager.v1.StopServerRequest
	24, // 20: junimohost.servermanager.v1.ServerManagerService.StartServer:input_type -> junimohost.servermanager.v1.StartServerRequest
	26, // 21: junimohost.servermanager.v1.ServerManagerService.RestartServer:input_type -> junimohost.servermanager.v1.RestartServerRequest
	28, // 22: junimohost.servermanager.v1.ServerManagerService.GetAvailableMods:input_type -> junimohost.servermanager.v1.GetAvailableModsRequest
	4,  // 23: junimohost.servermanager.v1.ServerManagerService.GetServerMods:input_type -> junimohost.servermanager.v1.GetServerModsRequest
	2,  // 24: junimohost.servermanager.v1.ServerManagerService.GetSharePage:input_type -> junimohost.servermanager.v1.GetSharePageRequest
	18, // 25: junimohost.servermanager.v1.ServerManagerService.GetServers:output_type -> junimohost.servermanager.v1.GetServersResponse
	13, // 26: junimohost.servermanager.v1.ServerManagerService.UpdateServer:output_type -> junimohost.servermanager.v1.UpdateServerResponse
	20, // 27: junimohost.servermanager.v1.ServerManagerService.CreateGameConfig:output_type -> junimohost.servermanager.v1.CreateGameConfigResponse
	8,  // 28: junimohost.servermanager.v1.ServerManagerService.GetBackups:output_type -> junimohost.servermanager.v1.GetBackupsResponse
	10, // 29: junimohost.servermanager.v1.ServerManagerService.RestoreBackup:output_type -> junimohost.servermanager.v1.RestoreBackupResponse
	23, // 30: junimohost.servermanager.v1.ServerManagerService.StopServer:output_type -> junimohost.servermanager.v1.StopServerResponse
	25, // 31: junimohost.servermanager.v1.ServerManagerService.StartServer:output_type -> junimohost.servermanager.v1.StartServerResponse
	27, // 32: junimohost.servermanager.v1.ServerManagerService.RestartServer:output_type -> junimohost.servermanager.v1.RestartServerResponse
	29, // 33: junimohost.servermanager.v1.ServerManagerService.GetAvailableMods:output_type -> junimohost.servermanager.v1.GetAvailableModsResponse
	5,  // 34: junimohost.servermanager.v1.ServerManagerService.GetServerMods:output_type -> junimohost.servermanager.v1.GetServerModsResponse
	3,  // 35: junimohost.servermanager.v1.ServerManagerService.GetSharePage:output_type -> junimohost.servermanager.v1.GetSharePageResponse
	25, // [25:36] is the sub-list for method output_type
	14, // [14:25] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_junimohost_servermanager_v1_servermanager_proto_init() }
func file_junimohost_servermanager_v1_servermanager_proto_init() {
	if File_junimohost_servermanager_v1_servermanager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayMod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharePageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharePageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerModsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerModsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBackupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBackupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreBackupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableModsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableModsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_junimohost_servermanager_v1_servermanager_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_junimohost_servermanager_v1_servermanager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_junimohost_servermanager_v1_servermanager_proto_goTypes,
		DependencyIndexes: file_junimohost_servermanager_v1_servermanager_proto_depIdxs,
		EnumInfos:         file_junimohost_servermanager_v1_servermanager_proto_enumTypes,
		MessageInfos:      file_junimohost_servermanager_v1_servermanager_proto_msgTypes,
	}.Build()
	File_junimohost_servermanager_v1_servermanager_proto = out.File
	file_junimohost_servermanager_v1_servermanager_proto_rawDesc = nil
	file_junimohost_servermanager_v1_servermanager_proto_goTypes = nil
	file_junimohost_servermanager_v1_servermanager_proto_depIdxs = nil
}
